#!/bin/sh

# SPDX-License-Identifier: GPL-2.0-or-later
# Copyright (C) 2011-present COREELEC (http://COREELEC.in.ua)

################################################################################
# Colors
ESC_SEQ="\x1b["
COL_RESET=$ESC_SEQ"39;49;00m"
COL_RED=$ESC_SEQ"31;01m"
COL_YELLOW=$ESC_SEQ"33;01m"
COL_BLUE=$ESC_SEQ"34;01m"
################################################################################

IMAGE_KERNEL="/flash/kernel.img"
IMAGE_SYSTEM="/flash/SYSTEM"
SCRIPT_EMMC="/flash/emmc_autoscript"
SCRIPT_EMMC_HAND="/flash/hand_emmc_autoscript"
SCRIPT_ENV="/flash/uEnv.ini"
IMAGE_DTB="/flash/amlscript"
IMAGE_LOGO="/usr/share/bootloader/logo.img"
ACE_RUN="/storage/.cache/services/acestream.conf"

if cat /proc/cmdline | grep -qw 'boot=LABEL=AE_EMMC' ; then
  echo -e "${COL_RED}Abort. System run from NAND/EMMC.${COL_RESET}"
  exit 1
fi

install_to_nand() {
  if [ -f $IMAGE_KERNEL -a -f $IMAGE_SYSTEM -a -f $SCRIPT_EMMC -a -f $SCRIPT_ENV ] ; then

    # Clean Android or DualBoot
    read -p "Do you want to install the COREELEC with Android (DualBoot)? [Y/n] " choice
    case "$choice" in
      [yY]*)
        CLEAN_ANDR="none"
        ;;
      *)
        CLEAN_ANDR="yes"
        ;;
    esac
          
    if grep -q /dev/system /proc/mounts ; then
      echo "Unmounting SYSTEM partiton."
      umount -f /dev/system
    fi

    # Copy system
    mkdir -p /tmp/system
    mount -o rw /dev/system /tmp/system

    if grep -q /dev/system /proc/mounts ; then

        if [ "$CLEAN_ANDR" = "yes" ] ; then
            echo -e "${COL_RED}Full cleaning System partiton...${COL_RESET}"
            rm -rf /tmp/system/*
            touch /tmp/system/.COREELEC_only
        else
            echo -e "${COL_YELLOW}Clearing System partiton from previous system install...${COL_RESET}"
            rm -f /tmp/system/kernel.img
            rm -f /tmp/system/SYSTEM
            rm -f /tmp/system/emmc_autoscript
            rm -f /tmp/system/hand_emmc_autoscript
            rm -f /tmp/system/uEnv.ini
            rm -fR /tmp/system/amlscript
        fi

        # size system
        EMPTY_SYS=`df -m /dev/system | grep '/dev/system' | awk '{print $4}'`
        SIZE_FLASH=`du -ms /flash | awk '{print $1}'`
        if [ $SIZE_FLASH -ge $EMPTY_SYS ] ; then
            echo -e "${COL_RED}The System section is not enough space to install! Exiting...${COL_RESET}"
            umount /tmp/system
            rm -fR /tmp/system
            exit 0
        fi

        echo -n "Copying system files..."
        e2label /dev/system "AE_EMMC"
        e2label /dev/data "DATA_EMMC"

        cp -f $IMAGE_KERNEL /tmp/system && sync
        cp -f $IMAGE_SYSTEM /tmp/system && sync
        cp -f $SCRIPT_EMMC /tmp/system && sync
        cp -f $SCRIPT_EMMC_HAND /tmp/system && sync
        cp -f $SCRIPT_ENV /tmp/system && sync
        sed -e "s/COREELEC/AE_EMMC/g" \
            -e "s/STORAGE/DATA_EMMC/g" \
            -i "/tmp/system/uEnv.ini"

        cp -fR $IMAGE_DTB /tmp/system && sync
        umount /tmp/system
        rm -fR /tmp/system
        sync
        echo "done."

        # logo
        if [ -f $IMAGE_LOGO ] ; then
            echo -n "Writing logo image..."
            dd if="$IMAGE_LOGO" of=/dev/logo bs=64k 2> /dev/null
            echo "done."
        fi

        # Clearing data
        if grep -q /dev/data /proc/mounts ; then
            echo "Unmounting DATA partiton."
            umount -f /dev/data
        fi

        mkdir -p /tmp/data
        mount -o rw /dev/data /tmp/data

        if grep -q /dev/data /proc/mounts ; then

            if [ "$CLEAN_ANDR" = "yes" ] ; then
                echo -e "${COL_RED}Full cleaning Data partiton...${COL_RESET}"
                rm -rf /tmp/data/*
            else
                echo -n "Clearing the Data partition from previous system settings..."
                rm -fR /tmp/data/.cache
                rm -fR /tmp/data/.config
                rm -fR /tmp/data/.kodi
                rm -fR /tmp/data/.local
                rm -fR /tmp/data/.ssh
            fi
            umount /tmp/data
            rm -fR /tmp/data
            sync
            echo "done."
        fi

        # Save data
        read -p "Do you want to copy your user data to internal data partition? [Y/n] " choice
        case "$choice" in
          [yY]*)
            if grep -q /dev/data /proc/mounts ; then
                echo "Unmounting DATA partiton."
                umount -f /dev/data
            fi

            mkdir -p /tmp/data
            mount -o rw /dev/data /tmp/data

            if grep -q /dev/data /proc/mounts ; then
                if [ -f $ACE_RUN ] ; then
                    echo -n "Stopping AceStream..."
                    systemctl stop acestream
                    echo "done."
                fi
                echo -n "Stopping Kodi..."
                systemctl stop kodi
                echo "done."
                echo "Copying user data..."
                cp -pPRv /storage/. /tmp/data
                umount /tmp/data
                rm -fR /tmp/data
                echo "done."
            fi
            ;;
        esac

        echo ""
        echo -e "${COL_BLUE}All done!${COL_RESET}"
        echo -e "${COL_BLUE}Your system is installed in internal memory..${COL_RESET}"
        echo ""

        read -p "Want to power off now? [y/N]? " choice
        case "$choice" in
          [yY]*)
            fw_setenv system_part b
            poweroff
            ;;
          *)
            if [ -f $ACE_RUN ] ; then
                echo -n "Restarting AceStream..."
                systemctl start acestream
                echo "done."
            fi
            echo -n "Restarting Kodi..."
            systemctl start kodi
            echo "done."
            ;;
        esac

    else
      echo ""
      echo -e "${COL_RED}No /dev/system  partiton found! Exiting...${COL_RESET}"
      echo ""
    fi
  else
    echo ""
    echo -e "${COL_RED}No COREELEC image found on /flash! Exiting...${COL_RESET}"
    echo ""
  fi
}

if [ ! -e /dev/system -o ! -e /dev/data ]; then
  echo ""
  echo -e "${COL_RED}One of SYTEM or DATA partitions is missing.${COL_RESET}"
  echo -e "${COL_BLUE}Make sure that you are using a correct device tree and a device with internal memory!${COL_RESET}"
  echo "Not all devices are compatible with installtointernal due to unsupported NAND/eMMC"
  echo "chips being used by some manufacturers."
  exit 0
fi

echo ""
echo -e "${COL_YELLOW}This script can full clear (or not) the SYSTEM and DATA sections on your device${COL_RESET}"
echo -e "${COL_YELLOW}and install the COREELEC instead of Android or second system without cleaning.${COL_RESET}"
echo ""
read -p "Type \"yes\" if you know what you are doing or anything else to exit: " choice
case "$choice" in
  yes) install_to_nand ;;
esac
